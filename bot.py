# -*- coding: utf-8 -*-

# import config
import importlib
import os
from urllib import response

import telebot
import sqlite3
import secrets
import datetime
import requests
import re
import request
import urllib.request
from idlelib import query
from random import shuffle
from datetime import datetime
from telebot import (apihelper, types)
# from config import (token, socks5)
from telebot.types import ReplyKeyboardRemove
from settings import *

# setting = importlib.import_module(os.getenv('.env'))
# os.getenv('botusername')
# from config import botusername

apihelper.proxy = {'https': socks5}
bot = telebot.TeleBot(token, threaded=False) # –æ–¥–Ω–æ–ø–æ—Ç–æ—á–Ω—ã–π —Ä–µ–∂–∏–º
print('—Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç...')
user = bot.get_me()
# bot_username = botusername
# print(bot_username)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    if message.chat.type == 'private':
        start_param = message.text.split()
        if len(start_param) == 1:
            print('–Ω–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –∑–∞–ø—É—Å–∫–∞')
            bot.send_message(message.chat.id, text='–ü—Ä–∏–≤–µ—Ç! –Ø –°–∞–Ω—Ç–∞-–±–æ—Ç, –ø–æ–º–æ–≥—É –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π '
                                                   '—Ä–æ–∑—ã–≥—Ä—ã—à –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏! üéÑ')
            keyboard = types.InlineKeyboardMarkup(row_width=2)  # –Ω–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —à–∏—Ä–∏–Ω–æ–π –≤ 2 –∫–Ω–æ–ø–∏ –≤ —Ä—è–¥—É
            key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes_group')
            key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_group')
            keyboard.add(key_yes, key_no)  # –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤ –æ–¥–∏–Ω —Ä—è–¥
            # keyboard.add(key_no) # –¥–æ–±–∞–≤–ª—è—Ç—å –ø–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥
            question = '–•–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞? üéÑ'
            bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)
            # bot.register_next_step_handler(message, new_group)
        else:
            print('–µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞:')
            print(start_param[1])
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–∫–∞—è –≥—Ä—É–ø–ø–∞ –µ—Å—Ç—å –≤ –ë–î –∏ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞ (—Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –±—ã–ª–æ)
            # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î (–æ–±—ä–µ–∫—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)
            conn = sqlite3.connect("santa.db")
            # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Cursor –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –µ–≥–æ –º–µ—Ç–æ–¥–æ–º execute()
            curs = conn.cursor()
            # —Å–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å —Å –≥—Ä—É–ø–ø–æ–π, –µ—Å–ª–∏ –≥—Ä—É–ø–ø–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–∏–Ω–∞—á–µ —Å—Å—ã–ª–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞)
            curs.execute('SELECT * FROM Groups WHERE link=:link', {'link': start_param[1]})
            group_exists = curs.fetchall()
            print(f'–µ—Å—Ç—å –≥—Ä—É–ø–ø–∞: {group_exists}')

            # print(f'—Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞: raffle = {group_exists[0][3]}') # –∫–æ–¥ –ø–∞–¥–∞–µ—Ç, —Ç.–∫ –≥—Ä—É–ø–ø—ã –µ—â–µ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å
            print(f'–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø: {len(group_exists)}')

            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ raffle (group_exists[0][3]) —Ä–∞–≤–Ω–æ 0 (—Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–µ –±—ã–ª–æ)
            if len(group_exists) == 1 and group_exists[0][3] == 0:
                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î, –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ —Ç—É–¥–∞
                conn = sqlite3.connect("santa.db")
                curs = conn.cursor()
                curs.execute('SELECT * FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
                user_exists = curs.fetchall()
                print(f'–µ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_exists}')
                print(f'–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(user_exists)}')

                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î, –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ —Ç—É–¥–∞
                if len(user_exists) == 0:
                    curs.execute('INSERT INTO Users(tg_id, username, first_name, last_name, current_group) '
                                 'VALUES (:tg_id, :username, :first_name, :last_name, :current_group)',
                                 {'tg_id': message.chat.id, 'username': message.chat.username,
                                  'first_name': message.chat.first_name, 'last_name': message.chat.last_name,
                                  'current_group': start_param[1]})
                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –ë–î, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                # –Ω–∞ —Å–ª—É—á–∞–π –µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –¥—Ä—É–≥–æ–π —Å—Å—ã–ª–∫–µ
                else:
                    curs.execute('UPDATE Users SET username=:username, first_name=:first_name, last_name=:last_name, current_group=:current_group '
                                 'WHERE tg_id=:tg_id', {'username': message.chat.username,
                                  'first_name': message.chat.first_name, 'last_name': message.chat.last_name,
                                  'current_group': start_param[1], 'tg_id': message.chat.id})

                # —É–∑–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
                curs.execute('SELECT id FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
                user_id = curs.fetchall()
                print(f'user_id = {user_id[0][0]}')
                print(f'group_id = {group_exists[0][0]}')

                # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≥—Ä—É–ø–ø—ã, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç –≤ –ë–î (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ –≤–ø–µ—Ä–≤—ã–µ)
                curs.execute('SELECT * FROM Relations_user_group WHERE user_id=:user_id AND group_id=:group_id',
                             {'user_id': user_id[0][0], 'group_id': group_exists[0][0]})
                relation_exists = curs.fetchall()
                print(f'–µ—Å—Ç—å —Å–≤—è–∑—å: {relation_exists}')

                # —É–∑–Ω–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                curs.execute('SELECT title FROM Groups WHERE id=:id', {'id': group_exists[0][0]})
                group_title = curs.fetchall()

                if len(relation_exists) == 0:
                    curs.execute('INSERT INTO Relations_user_group(user_id, group_id) '
                                 'VALUES (:user_id, :group_id)',
                                 {'user_id': user_id[0][0], 'group_id': group_exists[0][0]})
                    conn.commit()
                    conn.close()

                    # –ø–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Å—Ç–≤–∏–µ –∏–≥—Ä–æ–∫–∞! (–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–µ)
                    bot.send_message(message.chat.id, text=f'–ü—Ä–∏–≤–µ—Ç! üéÑ –Ø –°–∞–Ω—Ç–∞-–±–æ—Ç –∏ —Ç—ã –ø—Ä–∏—à–µ–ª –∫–æ –º–Ω–µ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é '
                                                           f'–≤ –≥—Ä—É–ø–ø—É ¬´{group_title[0][0]}¬ª! üéÑ '
                                                           '–î–ª—è —Ç–≤–æ–µ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ —É–∂–µ –µ—Å—Ç—å –º–µ—Å—Ç–æ –ø–æ–¥ —ë–ª–∫–æ–π! üéÑ')
                    # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                    keyboard = types.InlineKeyboardMarkup(row_width=2)
                    key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes_part')
                    key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_part')
                    keyboard.add(key_yes, key_no)
                    question = '–ì–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ?'
                    bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)

                # —Å–≤—è–∑—å —Å –≥—Ä—É–ø–ø–æ–π —É–∂–µ –µ—Å—Ç—å, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ
                else:
                    bot.send_message(message.chat.id, text=f'–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º –≤ –≥—Ä—É–ø–ø—É ¬´{group_title[0][0]}¬ª! üéÑ')
                    # —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä–∏–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫ –∏–ª–∏ –Ω–µ—Ç
                    # (–¥–∞ - —Å–æ–æ–±—â–∏—Ç—å - —Ç—ã —É–∂–µ —è–≤–ª—è–µ—à—å—Å—è –µ—ë —É—á–∞—Å—Ç–Ω–∏–∫–æ–º, –Ω–µ—Ç - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–º —Å—Ç–∞—Ç—å)
                    # relation_exists - –≤—ã–±–æ—Ä–∫–∞ —Å–≤—è–∑–∏, relation_exists[0][2] - —Ñ–ª–∞–≥ —É—á–∞—Å—Ç–∏—è (partisipation)

                    print('—Å–≤—è–∑—å')
                    print(relation_exists)
                    print(relation_exists[0][2])
                    if relation_exists[0][2] == 1:
                        # —Ö–æ—á–µ—à—å –ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É? –¥–∞ - –æ–∫, –Ω–µ—Ç - –æ—Ç–º–µ–Ω–∏—Ç—å —É—á–∞—Å—Ç–∏–µ
                        # —Å–Ω–æ–≤–∞ —Ç–∞ –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                        keyboard = types.InlineKeyboardMarkup(row_width=2)
                        key_yes = types.InlineKeyboardButton(text='–ö–æ–Ω–µ—á–Ω–æ! üéÑ', callback_data='yes_part_continue')
                        key_no = types.InlineKeyboardButton(text='–í—ã–π—Ç–∏', callback_data='no_part_continue')
                        keyboard.add(key_yes, key_no)
                        question = '–¢—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ! \n ' \
                                   '–ì–æ—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? üéÑ'
                        bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)
                    else:
                        # —Å–Ω–æ–≤–∞ —Ç–∞ –∂–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
                        keyboard = types.InlineKeyboardMarkup(row_width=2)
                        key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes_part')
                        key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no_part')
                        keyboard.add(key_yes, key_no)
                        question = '–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª —É—á–∞—Å—Ç–∏–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ. \n' \
                                   '–ì–æ—Ç–æ–≤ –∏–≥—Ä–∞—Ç—å? üéÑ'
                        bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)

                    conn.commit()
                    conn.close()

            elif len(group_exists) == 1 and group_exists[0][3] == 1:
                bot.send_message(message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω. '
                                                       '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.')
            else:
                bot.send_message(message.chat.id, text='–°—Å—ã–ª–∫–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞.')

    else:
        bot.send_message(message.chat.id, '–£–ø—Å. –°–∞–Ω—Ç–∞-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Ç-–∞-—Ç–µ—Ç.')
    logmess(message)


# –û–±—Ä–∞–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏–Ω–ª–∞–π–Ω–æ–≤—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä (–≥–¥–µ –±—ã –µ–≥–æ —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç—å...)
@bot.callback_query_handler(func=lambda call: True)
def callback_group_part(call):

    data_parts = call.data.split(':')
    print(f'data_pars: {data_parts}')
    # data_parts[1] - id –≥—Ä—É–ø–ø—ã –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞

    # –ö–ù–û–ü–ö–ò –°–û–ó–î–ê–ù–ò–Ø –ù–û–í–û–ô –ì–†–£–ü–ü–´
    # if call.data == 'yes_group':
    if data_parts[0] == 'yes_group':
        # —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        get_group_name(call.message) # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
        # –∫–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö, –∏–ª–∏ –∏—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏
    elif data_parts[0] == 'no_group':
        bot.send_message(call.message.chat.id, text='–ù—É –æ–∫. E—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start '
                                                    '–∏–ª–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –≥—Ä—É–ø–ø–µ –ø–æ —Å—Å—ã–ª–∫–µ –æ—Ç –≤–µ–¥—É—â–µ–≥–æ!')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

    # –ö–ù–û–ü–ö–ò –°–û–ì–õ–ê–°–ò–Ø –ù–ê –£–ß–ê–°–¢–ò–ï
    elif data_parts[0] == 'yes_part':
        # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è –Ω–∞ 1
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()

        print('---------------')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        curs.execute('SELECT id, current_group FROM Users WHERE tg_id=:tg_id', {'tg_id': call.message.chat.id})
        current_user = curs.fetchall()
        print(current_user)
        print(f'user_id = {current_user[0][0]}')
        print(f'group_link = {current_user[0][1]}')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        curs.execute('SELECT id, raffle FROM Groups WHERE link=:link', {'link': current_user[0][1]})
        group_id_raf = curs.fetchall()
        print(group_id_raf[0][0])
        print('-----------------')

        # –ø—Ä–µ–∂–¥–µ —á–µ–º –º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—Éc, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å—è—â–∏–µ –∫–Ω–æ–ø–∫–∏, –∞ —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –±—ã–ª)
        if group_id_raf[0][1] == 1:
            conn.commit()
            conn.close()
            bot.send_message(call.message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω. '
                                                        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.')
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            return

        # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è –Ω–∞ 1 –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–≤—è–∑–µ–π
        curs.execute('UPDATE Relations_user_group SET participation=:participation '
                     'WHERE user_id=:user_id AND group_id=:group_id', {'participation': 1,
                                                                       'user_id': current_user[0][0], 'group_id': group_id_raf[0][0]})
        conn.commit()
        conn.close()

        # —Å–æ–æ–±—â–∞—Ç—å –≤ –∫–∞–∫—É—é –≥—Ä—É–ø–ø—É –ø—Ä–∏–Ω—è—Ç

        bot.send_message(call.message.chat.id, text='üéÅ –í–≤–µ–¥–∏ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫ –ø–æ–¥–∞—Ä–∫—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–≥–æ –°–∞–Ω—Ç—ã! '
                                                    '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—é—Ä–ø—Ä–∏–∑ - —Å–æ–æ–±—â–∏ –æ–± —ç—Ç–æ–º! '
                                                    '(–ß—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —à–∞–≥ - –ø—Ä–∏—à–ª–∏ —Å—Ç–∏–∫–µ—Ä...) üéÅ')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        enter_wish(call.message) # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–∂–µ–ª–∞–Ω–∏—è –æ—Ç –∏–≥—Ä–æ–∫–∞

    elif data_parts[0] == 'no_part':
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()
        print('---------------')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        curs.execute('SELECT id, current_group FROM Users WHERE tg_id=:tg_id', {'tg_id': call.message.chat.id})
        current_user = curs.fetchall()
        print(current_user)
        print(f'user_id = {current_user[0][0]}')
        print(f'group_link = {current_user[0][1]}')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        curs.execute('SELECT id, raffle FROM Groups WHERE link=:link', {'link': current_user[0][1]})
        group_id_raf = curs.fetchall()
        print(group_id_raf[0][0])
        print('-----------------')
        # –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å—è—â–∏–µ –∫–Ω–æ–ø–∫–∏, –∞ —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –±—ã–ª)
        if group_id_raf[0][1] == 1:
            conn.commit()
            conn.close()
            bot.send_message(call.message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω. '
                                                        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.')
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            return

        bot.send_message(call.message.chat.id, text='–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –≤–Ω–æ–≤—å '
                                                    '–∏ —Å–¥–µ–ª–∞–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä! ;)')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        conn.commit()
        conn.close()

    # –ö–ù–û–ü–ö–ò –°–ú–ï–ù–´ –°–¢–ê–¢–£–°–ê –£–ß–ê–°–¢–ò–Ø (–ü–û–í–¢–û–†–ù–´–ô –ü–ï–†–ï–•–û–î –ü–û –°–°–´–õ–ö–ï)
    elif data_parts[0] == 'yes_part_continue':
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()
        print('---------------')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        curs.execute('SELECT id, current_group FROM Users WHERE tg_id=:tg_id', {'tg_id': call.message.chat.id})
        current_user = curs.fetchall()
        print(current_user)
        print(f'user_id = {current_user[0][0]}')
        print(f'group_link = {current_user[0][1]}')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        curs.execute('SELECT id, raffle FROM Groups WHERE link=:link', {'link': current_user[0][1]})
        group_id_raf = curs.fetchall()
        print(group_id_raf[0][0])
        print('-----------------')
        # –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å—è—â–∏–µ –∫–Ω–æ–ø–∫–∏, –∞ —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –±—ã–ª)
        if group_id_raf[0][1] == 1:
            conn.commit()
            conn.close()
            bot.send_message(call.message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω. '
                                                        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.')
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            return

        bot.send_message(call.message.chat.id, text='–ß—É–¥–µ—Å–Ω–æ! –ñ–¥—ë–º –ø–æ–¥–∞—Ä–∫–∏! üéÅ')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        conn.commit()
        conn.close()

    elif data_parts[0] == 'no_part_continue':
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()
        print('---------------')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        curs.execute('SELECT id, current_group FROM Users WHERE tg_id=:tg_id', {'tg_id': call.message.chat.id})
        current_user = curs.fetchall()
        print(current_user)
        print(f'user_id = {current_user[0][0]}')
        print(f'group_link = {current_user[0][1]}')
        # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        curs.execute('SELECT id, raffle FROM Groups WHERE link=:link', {'link': current_user[0][1]})
        group_id_raf = curs.fetchall()
        print(group_id_raf[0][0])
        print('-----------------')
        # –ø—Ä–µ–∂–¥–µ —á–µ–º –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –≥—Ä—É–ø–ø–∞ (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –≤–∏—Å—è—â–∏–µ –∫–Ω–æ–ø–∫–∏, –∞ —Ä–æ–∑—ã–≥—Ä—ã—à —É–∂–µ –±—ã–ª)
        if group_id_raf[0][1] == 1:
            conn.commit()
            conn.close()
            bot.send_message(call.message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω. '
                                                        '–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.')
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            return

        # —Å–æ–æ–±—â–∞—Ç—å, –≤ –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ –æ—Ç–º–µ–Ω–µ–Ω–æ —É—á–∞—Å—Ç–∏–µ

        bot.send_message(call.message.chat.id, text='–ù—É –≤–æ—Ç... –°–∞–Ω—Ç–∞ –≤—Å—Ö–ª–∏–ø–Ω—É–ª... \n'
                                                    '–¢–≤–æ—ë —É—á–∞—Å—Ç–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

        # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è –Ω–∞ 0 –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–≤—è–∑–µ–π
        curs.execute('UPDATE Relations_user_group SET participation=:participation '
                     'WHERE user_id=:user_id AND group_id=:group_id', {'participation': 0,
                                                                       'user_id': current_user[0][0],
                                                                       'group_id': group_id_raf[0][0]})
        conn.commit()
        conn.close()


    # –ö–ù–û–ü–ö–ò –ü–û–î–¢–í–ï–ñ–î–ï–ù–ò–Ø –†–û–ó–´–ì–†–´–®–ê
    elif data_parts[0] == 'yes_confirm':
        # —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤—É –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        # –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã, –ø–µ—Ä–µ–¥–∞—ë–º –≤ –Ω–µ—ë id –≥—Ä—É–ø–ø—ã
        run_game(data_parts[1])

    elif data_parts[0] == 'no_confirm':
        bot.send_message(call.message.chat.id, text='–†–æ–∑—ã–≥—Ä—ã—à –æ—Ç–º–µ–Ω—ë–Ω.')
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)

    logcall(call)


# —á—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è —Ç–æ? —Ç–æ–ª—å–∫–æ –ø–µ—Ä–µ–¥–∞–µ—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞–ª—å—à–µ? –∑–∞—á–µ–º –æ–Ω–∞ —Ç–æ–≥–¥–∞? :)
def enter_wish(message): # –ø–æ–ª—É—á–∞–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫ –ø–æ–¥–∞—Ä–∫—É
    # bot.send_message(message.chat.id, text='–ñ–¥—É –ø–æ–∂–µ–ª–∞–Ω–∏—è.')
    bot.register_next_step_handler(message, get_wish)
    logmess(message)


def get_wish(message):
    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
    if message.content_type == 'text':
        print(f'–ø–æ–∂–µ–ª–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞: {message.text}')
        print(f'–¥–ª–∏–Ω–∞ –ø–æ–∂–µ–ª–∞–Ω–∏—è: {len(message.text)}')
        # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–ª–∏–Ω—ã –ø–æ–∂–µ–ª–∞–Ω–∏—è
        if len(message.text) <= 1000:
            if message.text[0] != '/':
                # —Ä–∞–±–æ—Ç–∞ —Å –ë–î
                conn = sqlite3.connect("santa.db")
                curs = conn.cursor()
                # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
                curs.execute('SELECT id, current_group FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
                current_user = curs.fetchall()
                # –≤—Å–ø–æ–º–∏–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –≤ –∫–æ—Ç–æ—Ä—É—é –ø—Ä–∏—à—ë–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
                curs.execute('SELECT id FROM Groups WHERE link=:link', {'link': current_user[0][1]})
                group_id = curs.fetchall()
                # –∑–∞–Ω–æ—Å–∏–º/–º–µ–Ω—è–µ–º –ø–æ–∂–µ–ª–∞–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü–µ —Å–≤—è–∑–µ–π
                curs.execute('UPDATE Relations_user_group SET wish=:wish '
                             'WHERE user_id=:user_id AND group_id=:group_id',
                             {'wish': message.text, 'user_id': current_user[0][0], 'group_id': group_id[0][0]})
                conn.commit()
                conn.close()
                bot.send_message(message.chat.id, text='–ö–ª–∞—Å—Å! üéÑ –°–∞–Ω—Ç–∞ —É—á—Ç—ë—Ç —Ç–≤–æ—ë –ø–æ–∂–µ–ª–∞–Ω–∏–µ (–∏–ª–∏ –Ω–µ—Ç). \n'
                                                       '–¢–µ–ø–µ—Ä—å –∂–¥–∏ —Ä–æ–∑—ã–≥—Ä—ã—à! (–ø–æ–¥—É–º–∞—Ç—å –Ω–∞–¥ –¥–∞—Ç–æ–π) üéÑ'
                                                       '–ö—Å—Ç–∞—Ç–∏, —Ç—ã –º–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å —Å–≤–æ—ë –ø–æ–∂–µ–ª–∞–Ω–∏–µ –¥–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è '
                                                       '—Ä–æ–∑—ã–≥—Ä—ã—à–∞ –∫–æ–º–∞–Ω–¥–æ–π /enterwish! üéÑ')
            else:
                bot.send_message(message.chat.id, text='–≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –ø–æ–∂–µ–ª–∞–Ω–∏–µ. '
                                                       '–¢—ã –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /enterwish! üéÅ')
        else:
            bot.send_message(message.chat.id, text='–ü–æ–∂–µ–ª–∞–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ—Ö–æ–∂–µ, —Ç—ã —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ–≥–æ —Ö–æ—á–µ—à—å? :) '
                                                   '–û–≥—Ä–∞–Ω–∏—á—å –æ–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–∏—Ö –∞–ø–ø–µ—Ç–∏—Ç–æ–≤ 1000 —Å–∏–º–≤–æ–ª–∞–º–∏ :) '
                                                   '–î–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π /enterwish üéÅ!')
    else:
        bot.send_message(message.chat.id, text='–°–∞–Ω—Ç–∞ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω!')

    logmess(message)


def get_group_name(message): # –ø–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã
    bot.send_message(message.chat.id, text='–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏ —è –ø—Ä–∏—à–ª—é —Ç–µ–±–µ —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ. '
                                           '–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ —Å–ª–µ—à–∞.')
    bot.register_next_step_handler(message, check_group_name) # –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞–∑–≤–∞–Ω–∏—è
    logmess(message)

# –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è
def check_group_name(message):

    # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç)
    # –∑–∞–ø—Ä–µ—â–∞–µ–º –Ω–∞–∑–≤–∞—Ç—å –≥—Ä—É–ø–ø—É "–û—Ç–º–µ–Ω–∞" - —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ
    if message.content_type == 'text' and message.text != '–û—Ç–º–µ–Ω–∞':
        # –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 140 —Å–∏–º–≤–æ–ª–æ–≤
        print(f'–¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏: {len(message.text)}')
        if len(message.text) <= 140:
            print(message.content_type)
            print(message.text[0])
            print(f'–Ω–∞–∑–≤–∞–Ω–∏–µ: {message.text}')
            # –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ, –∞ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ (–∏ –æ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ)
            if message.text[0] == '/':
                bot.send_message(message.chat.id, text='–û–π! –ö–æ–º–∞–Ω–¥–∞? –≠—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã. '
                                                       '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É '
                                                       '–≤ –±—É–¥—É—â–µ–º. '
                                                       '–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —Ç–≤–æ–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø.')
            else:
                # –µ—Å–ª–∏ —Å–æ–∑–¥–∞—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î, —Ç–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –Ω–µ –Ω–∞–¥–æ
                conn = sqlite3.connect("santa.db")
                curs = conn.cursor()
                curs.execute('SELECT id FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
                user_id = curs.fetchall()
                print(user_id)
                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å –≤ –ë–î
                if len(user_id) != 0:
                    curs.execute('SELECT * FROM Groups WHERE leader_id=:leader_id and title=:title and raffle=:raffle',
                                 {'leader_id': user_id[0][0], 'title': message.text, 'raffle': 0})
                    group_exists = curs.fetchall()
                    # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                    conn.commit()
                    conn.close()
                    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è (—Ä–∞–∑–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä - —Ä–∞–∑–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ)
                    if len(group_exists) != 0:
                        bot.send_message(message.chat.id, text='–ü—Ä–æ–∫–∞–∑–Ω–∏–∫! –≠—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã. '
                                                               '–û–Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ –≤ —Ä–∞–º–∫–∞—Ö —Ç–≤–æ–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø. '
                                                               '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑.')
                    else:
                        link_generation(message)  # –≤—ã–∑—ã–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
                # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î
                else:
                    # –∑–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
                    conn.commit()
                    conn.close()
                    link_generation(message)  # –≤—ã–∑—ã–≤–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é

        else:
            bot.send_message(message.chat.id, text='–£–ø—Å. –ù–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ! '
                                                   '–û–Ω–æ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 200 —Å–∏–º–≤–æ–ª–æ–≤')
    elif message.content_type == 'text' and message.text == '–û—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, text='–ü—Ä–æ–∫–∞–∑–Ω–∏–∫! –≠—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã. '
                                               '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑.')
    else:
        bot.send_message(message.chat.id, text='–°–∞–Ω—Ç–∞ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω!')

    logmess(message)


# –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏ –∏ –∑–∞–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î
def link_generation(message):
    print(f'message.text: {message.text}')
    print(f'link_generation - {message}')

    # –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏
    link_part = secrets.token_urlsafe(12)
    print(f'—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å —Å—Å—ã–ª–∫–∏: {link_part}')
    link_full = 'https://t.me/shanta_bot?start=' + link_part
    # –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π env
    # link_full = 'https://t.me/'+ bot_username +'?start=' + link_part
    print(f'–ø–æ–ª–Ω–∞—è —Å—Å—ã–ª–∫–∞: {link_full}')

    # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
    conn = sqlite3.connect("santa.db")
    curs = conn.cursor()
    curs.execute('SELECT * FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
    user_exists = curs.fetchall()
    # –µ—Å–ª–∏ –≤–µ–¥—É—â–µ–≥–æ –Ω–µ—Ç –≤ –ë–î, –∑–∞–Ω–æ—Å–∏–º –µ–≥–æ —Ç—É–¥–∞
    if len(user_exists) == 0:
        curs.execute('INSERT INTO Users(tg_id, username, first_name, last_name, current_group) '
                     'VALUES (:tg_id, :username, :first_name, :last_name, :current_group)',
                     {'tg_id': message.chat.id, 'username': message.chat.username,
                      'first_name': message.chat.first_name, 'last_name': message.chat.last_name,
                      'current_group': link_part})
    # –µ—Å–ª–∏ –≤–µ–¥—É—â–∏–π –µ—Å—Ç—å –≤ –ë–î, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —Å–ª—É—á–∞–π –µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    # –∏–ª–∏ –ø—Ä–∏—Ö–æ–¥–∞ –ø–æ –¥—Ä—É–≥–æ–π —Å—Å—ã–ª–∫–µ
    else:
        curs.execute('UPDATE Users SET username=:username, first_name=:first_name, '
                     'last_name=:last_name, current_group=:current_group '
                     'WHERE tg_id=:tg_id', {'username': message.chat.username,
                                            'first_name': message.chat.first_name, 'last_name': message.chat.last_name,
                                            'current_group': link_part, 'tg_id': message.chat.id})
    # —É–∑–Ω–∞–µ–º id –≤–µ–¥—É—â–µ–≥–æ, –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–π –≤ –ë–î (–∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç)
    curs.execute('SELECT id FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
    user_id = curs.fetchall()
    # –∑–∞–Ω–æ—Å–∏–º –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É –≤ —Ç–∞–±–ª–∏—Ü—É Group
    curs.execute('INSERT INTO Groups(title, link, raffle, leader_id) '
                 'VALUES (:title, :link, :raffle, :leader_id)',
                 {'title': message.text, 'link': link_part,
                  'raffle': 0, 'leader_id': user_id[0][0]})
    # —É–∑–Ω–∞–µ–º id –≥—Ä—É–ø–ø—ã, –ø—Ä–∏—Å–≤–æ–µ–Ω–Ω—ã–π –≤ –ë–î (–∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç)
    curs.execute('SELECT id FROM Groups WHERE link=:link', {'link': link_part})
    group_new = curs.fetchall()
    print(f'id –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã: {group_new[0][0]}')
    # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–≤—è–∑—å –≤–µ–¥—É—â–µ–≥–æ –∏ –≥—Ä—É–ø–ø—ã, –µ—Å–ª–∏ –µ—ë –µ—â—ë –Ω–µ—Ç –≤ –ë–î (–Ω–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø—Ä–∏—Ö–æ–¥ –ø–æ —Å—Å—ã–ª–∫–µ)
    curs.execute('SELECT * FROM Relations_user_group WHERE user_id=:user_id AND group_id=:group_id',
                 {'user_id': user_id[0][0], 'group_id': group_new[0][0]})
    relation_exists = curs.fetchall()
    if len(relation_exists) == 0:
        # —Å—Ä–∞–∑—É —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —É—á–∞—Å—Ç–∏—è –≤ 1
        curs.execute('INSERT INTO Relations_user_group(user_id, group_id, participation) '
                     'VALUES (:user_id, :group_id, :participation)',
                     {'user_id': user_id[0][0], 'group_id': group_new[0][0], 'participation': 1})

    bot.send_message(message.chat.id, text=f'üéÑ –ì–æ–¥–∏—Ç—Å—è-—è–≥–æ–¥–∏—Ü–∞! –ì—Ä—É–ø–ø–∞ ¬´{message.text}¬ª —Å–æ–∑–¥–∞–Ω–∞!\n\n'
                                           f'üéÑ –í–æ—Ç —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –¥–ª—è —Ç–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π: '
                                           f'{link_full}.\n\n'
                                           f'üéÑ –¢—ã –º–æ–∂–µ—à—å –≤–≤–µ—Å—Ç–∏ —Å–≤–æ—ë –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫ –ø–æ–¥–∞—Ä–∫—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /enterwish.\n\n'
                                           f'üéÑ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à '
                                           f'–∫–æ–º–∞–Ω–¥–æ–π /rungame.\n\n')
    conn.commit()
    conn.close()
    logmess(message)


@bot.message_handler(commands=['help'])
def give_help(message):
    if message.chat.type == 'private':
        bot.send_message(message.chat.id, text='/start - –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≥—Ä—É–ø–ø—É üéÑ\n'
                                               '/help - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å üéÑ\n'
                                               '/enterwish - –≤–≤–µ—Å—Ç–∏ –Ω–æ–≤–æ–µ –ø–æ–∂–µ–ª–∞–Ω–∏–µ –∫ –ø–æ–¥–∞—Ä–∫—É üéÑ\n'
                                               '/rungame - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à (–¥–ª—è –≤–µ–¥—É—â–µ–≥–æ) üéÑ')
    else:
        bot.send_message(message.chat.id, text='–£–ø—Å. –°–∞–Ω—Ç–∞-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Ç-–∞-—Ç–µ—Ç.')
    logmess(message)


@bot.message_handler(commands=['enterwish'])
def enter_new_wish(message):
    if message.chat.type == 'private':
        # –ù–£–ñ–ù–ê –ü–†–û–í–ï–†–ö–ê, –ß–¢–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨ –ù–ê–•–û–î–ò–¢–°–Ø –í –ß–ê–¢–ï –ü–û –°–°–´–õ–ö–ï
        # –ß–¢–û–ë–´ –ó–ù–ê–¢–¨ –ì–†–£–ü–ü–£, –ö–£–î–ê –î–û–ë–ê–í–õ–Ø–¢–¨ –ü–û–ñ–ï–õ–ê–ù–ò–Ø
        # –ï–°–õ–ò –¢–ï–ö–£–©–ï–ô –ì–†–£–ü–ü–´ –ù–ï–¢, –¢–û –°–û–û–ë–©–ê–¢–¨ –û–ë –≠–¢–û–ú?
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º—Ç—Ä –∑–∞–ø—É—Å–∫–∞, —Ç–æ –Ω–µ –¥–∞–≤–∞—Ç—å –≤—ã–±–∏—Ä–∞—Ç—å, –µ–ª—Å–∏ –µ—Å—Ç—å —Ç–æ –¥–∞–≤–∞—Ç—å

        # conn = sqlite3.connect("santa.db")
        # curs = conn.cursor()
        # curs.execute('SELECT id FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
        # leader_id = curs.fetchall()

        bot.send_message(message.chat.id, text='–°–∞–Ω—Ç–∞ –∂–¥—ë—Ç —Ç–≤–æ–µ–≥–æ –ø–æ–∂–µ–ª–∞–Ω–∏—è! üéÅ')
        bot.register_next_step_handler(message, get_wish)
    else:
        bot.send_message(message.chat.id, text='–£–ø—Å. –°–∞–Ω—Ç–∞-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Ç-–∞-—Ç–µ—Ç.')
    logmess(message)


@bot.message_handler(commands=['rungame'])
def start_game(message):
    if message.chat.type == 'private':
        # –≤—ã–±–∏—Ä–∞–µ–º –∏–∑ –±–¥ –∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä—É–ø–ø—ã —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()
        curs.execute('SELECT id FROM Users WHERE tg_id=:tg_id', {'tg_id': message.chat.id})
        leader_id = curs.fetchall()
        curs.execute('SELECT title FROM Groups WHERE leader_id=:leader_id AND raffle=:raffle', {'leader_id': leader_id[0][0], 'raffle': 0})
        list_active_groups = curs.fetchall()
        print(list_active_groups)
        if len(list_active_groups) == 0:
            bot.send_message(message.chat.id, text='–û—É, –∫–∞–∂–µ—Ç—Å—è, —É —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞! '
                                                   '–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–µ–¥—É—â–µ–≥–æ.')
        else:
            keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
            # –∑–∞–Ω–æ—Å–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø –≤ –∫–Ω–æ–ø–∫–∏
            for group in list_active_groups:
                title = group[0]
                button = types.KeyboardButton(text=title)
                keyboard.add(button)

            button_cancel = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
            keyboard.add(button_cancel)

            bot.send_message(message.chat.id,
                             "–í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à! "
                             "(–î–µ–π—Å—Ç–≤–∏–µ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ –∏ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ.)",
                             reply_markup=keyboard)

            bot.register_next_step_handler(message, confirm_run_game)

        conn.commit()
        conn.close()

    else:
        bot.send_message(message.chat.id, text='–£–ø—Å. –°–∞–Ω—Ç–∞-–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Ç-–∞-—Ç–µ—Ç.')
    logmess(message)


def confirm_run_game(message):

    # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –û—Ç–º–µ–Ω—ã (—É–±–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É)
    if message.content_type == 'text' and message.text == '–û—Ç–º–µ–Ω–∞':
        bot.send_message(message.chat.id, text='–û–∫–µ–π, –æ—Ç–º–µ–Ω–∞.', reply_markup=ReplyKeyboardRemove())
        return

    if message.content_type == 'text' and message.text[0] != '/':
        # —Å—Ä–∞–∑—É –∏–∑–±–∞–≤–ª—è–µ–º—Å—è –æ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        # bot.send_message(message.chat.id, text='–°–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±–µ–∑ —Ç–µ–∫—Å—Ç–∞ –Ω–µ–ª—å–∑—è',
        #                  reply_markup=ReplyKeyboardRemove())

        # –ª–æ–≥–∏–∫–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∞
        conn = sqlite3.connect("santa.db")
        curs = conn.cursor()

        # —É–∑–Ω–∞—ë–º tg_id –≤–µ–¥—É—â–µ–≥–æ –¥–ª—è –ª–æ–≥–æ–≤ –∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        # message.chat.id ? –≤–µ–¥—å —Ç–æ–ª—å–∫–æ –≤–µ–¥—É—â–∏–π –º–æ–∂–µ—Ç "–¥–æ–π—Ç–∏" –¥–æ —ç—Ç–æ–≥–æ –∫–æ–¥–∞?
        print(f'–í–ï–î–£–©–ò–ô - {message.chat.id}')

        # —É–∑–Ω–∞—ë–º id –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã (–º–æ–∂–Ω–æ –≤–∑—è—Ç—å –∏ –ë–î-—à–Ω—ã–π id –¥–ª—è –ª–æ–≥–æ–≤)
        # –±—É–¥–µ–º –µ–≥–æ –ø–µ—Ä–µ–¥–≤–∞—Ç—å –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞
        # –ù–£–ñ–ù–û –ü–†–û–í–ï–†–ò–¢–¨, –ß–¢–û –í–†–£–ß–ù–£–Æ –ù–ï –í–í–ï–î–ï–ù–ê –ì–†–£–ü–ü–ê, –í –ö–û–¢–û–†–û–ô –£–ñ–ï –ë–´–õ –†–û–ó–´–ì–†–´–®
        curs.execute('SELECT id FROM Groups WHERE title=:title '
                     'AND raffle=:raffle', {'title': message.text, 'raffle': 0})
        group_id = curs.fetchall()

        if len(group_id) == 0:
            # —É–±–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            bot.send_message(message.chat.id, text='–£–ø—Å. –°—Ä–µ–¥–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø —Ç–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –Ω–µ—Ç. '
                                                   '–£–±–µ–¥–∏—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –≤—ã–±–µ—Ä–∏ '
                                                   '–∏–∑ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.', reply_markup=ReplyKeyboardRemove())
        else:
            # c–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∑–¥–µ—Å—å (—ç—Ç–æ –Ω–µ –ø–æ–∑–¥–Ω–æ?)
            # –ó–ê–ü–†–ê–®–ò–í–ê–¢–¨ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –ó–ê–ü–£–°–ö–ê –í –í–ï–†–ù–û –í–´–ë–†–ê–ù–ù–û–ô –ì–†–£–ü–ü–ï
            bot.send_message(message.chat.id, text=f'–î–ª—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤—ã–±—Ä–∞–Ω–∞ –≥—Ä—É–ø–ø–∞ ¬´{message.text}¬ª! üéÑ',
                             reply_markup=ReplyKeyboardRemove())

            # –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
            keyboard_confirm = types.InlineKeyboardMarkup(row_width=2)
            key_confirm_yes = types.InlineKeyboardButton(text='–ü—É—Å–∫!', callback_data=f'yes_confirm:{group_id[0][0]}')
            key_confirm_no = types.InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='no_confirm')
            keyboard_confirm.add(key_confirm_yes, key_confirm_no)
            question = '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞: 3, 2, 1...'
            bot.send_message(message.from_user.id, text=question, reply_markup=keyboard_confirm)

        conn.commit()
        conn.close()
    elif message.content_type == 'text' and message.text[0] == '/':
        bot.send_message(message.chat.id, text='–û–π! –ö–æ–º–∞–Ω–¥–∞? –ù–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã. '
                                               '–£–±–µ–¥–∏—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∏ –≤—ã–±–µ—Ä–∏ '
                                               '–∏–∑ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.',
                         reply_markup=ReplyKeyboardRemove())
    else:
        # —É–±–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        bot.send_message(message.chat.id, text='–°–∞–Ω—Ç–∞ –Ω–µ —Å–æ–≥–ª–∞—Å–µ–Ω!', reply_markup=ReplyKeyboardRemove())

    logmess(message)


# –í–´–û–õ–ù–ï–ù–ò–ï –†–û–ó–´–ì–†–´–®–ê –¢–û–õ–¨–ö–û –í –ü–û–°–õ–ï –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø
def run_game(run_group_id):

    # run_group_id - —ç—Ç–æ –ø—Ä–∏—à–µ–¥—à–∏–π –∏–∑ –∫–Ω–æ–ø–∫–∏ group_id
    print(f'–¥–∞–Ω–Ω—ã–µ –∏–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫: {run_group_id}\n')

    conn = sqlite3.connect("santa.db")
    curs = conn.cursor()

    # –±–µ—Ä—ë–º id –≥—Ä—É–ø–ø—ã, leader_id –∏ title –ø–æ –æ–¥–Ω–æ–º—É –∏–∑–≤–µ—Å—Ç–Ω–æ–º—É id –≥—Ä—É–ø–ø—ã (id, —á—Ç–æ–±—ã –æ–ø–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏)
    curs.execute('SELECT id, leader_id, title FROM Groups WHERE id=:id', {'id': run_group_id})
    group_data = curs.fetchall()

    # –æ–ø—è—Ç—å –Ω–∞—Ö–æ–¥–∏–º tg_id –≤–µ–¥—É—â–µ–≥–æ –ø–æ –µ–≥–æ –±–¥_id
    curs.execute('SELECT tg_id FROM Users WHERE id=:id', {'id': group_data[0][1]})
    leader_telegram_id = curs.fetchall()

    # —Ç—É—Ç –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤ —ç—Ç–æ–π –∞–∫—Ç–∏–≤–Ω–æ–π –≥—Ä—É–ø–ø–µ, –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏
    curs.execute('SELECT * FROM Relations_user_group WHERE group_id=:group_id '
                 'AND participation=:participation',
                 {'group_id': run_group_id, 'participation': 1})
    participants = curs.fetchall()
    # –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–µ—Ç, —Ç–æ –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞ 1 –∏ –≤—ã—Ö–æ–¥–∏–º
    if len(participants) == 0:

        bot.send_message(leader_telegram_id[0][0], text=f'–í –¥–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ì—Ä—É–ø–ø–∞ –∑–∞–∫—Ä—ã—Ç–∞. '
                                                        f'–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç—ã –º–æ–∂–µ—à—å –∫–æ–º–∞–Ω–¥–æ–π /start!')

        # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –Ω–∞ 1
        curs.execute('UPDATE Groups SET raffle=:raffle WHERE id=:id',
                     {'raffle': 1, 'id': run_group_id})
        # –°–û–•–†–ê–ù–Ø–ï–ú –ò–ó–ú–ï–ù–ï–ù–ò–Ø, –†–ê–ó–†–´–í–ê–ï–ú –°–û–ï–î–ò–ù–ï–ù–ò–ï
        conn.commit()
        conn.close()
        # –∏ —É–±–∏—Ä–∞–µ–º—Å—è –æ—Ç—Å—é–¥–∞
        return

    # –≤—ã–±–∏—Ä–∞–µ–º id –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø—ã, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–ø–∏—Å–æ–∫, –ü–ê–î–ê–ï–¢ –ï–°–õ–ò –ì–†–£–ü–ü –ù–ï–¢
    curs.execute('SELECT user_id FROM Relations_user_group WHERE group_id=:group_id '
                 'AND participation=:participation',
                 {'group_id': group_data[0][0], 'participation': 1})
    all_participants = curs.fetchall()
    print('+++++++++++++++')
    print(all_participants)
    # —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ id —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    list_user_id = []
    for i in range(len(all_participants)):
        list_user_id.append(all_participants[i][0])

    print(f'list: {list_user_id}')
    # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
    shuffle(list_user_id)
    print(f'shuf_list: {list_user_id}')

    # –ª–æ–≥–∏—Ä—É–µ–º –≥—Ä—É–ø—É —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤ —Ñ–∞–π–ª
    # (–∏–ª–∏ –¥–µ–ª–∞—Ç—å —ç—Ç–æ –ø–æ—Å–ª–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞?)
    gr = run_group_id
    now = datetime.now()

    # —Å–∫–ª–∞–¥—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã –ª–æ–≥–æ–≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞ –≤ –ø–∞–ø–∫—É
    with open(os.path.join(os.path.dirname(__file__), 'logs', f'logs_{gr}.txt'), 'w') as log_list:
        log_list.write(f'group_id: {str(gr)}\n')
        log_list.write(f'run_game: {now}\n')
        log_list.write(f'leader tg_id: {group_data[0][1]}\n') # —É–ø–∞–¥–µ—Ç?
        log_list.write('list_game: ')
        for i in list_user_id:
            log_list.write(f'{str(i)}, ')

    # —Å–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –°–∞–Ω—Ç: –∫–ª—é—á-–∏–≥—Ä–æ–∫, –∑–Ω–∞—á–µ–Ω–∏–µ-–°–∞–Ω—Ç–∞
    dict_sant = {}
    for i in range(len(list_user_id)):
        if i < len(list_user_id) - 1:
            dict_sant.update({list_user_id[i]: list_user_id[i + 1]})
        else:
            dict_sant.update({list_user_id[i]: list_user_id[0]})
    print(dict_sant)

    # –≤—ã–±–∏—Ä–∞–µ–º –≤—Å—é –∏–Ω—Ñ—É –∏–≥—Ä–æ–∫–∞ –ø–æ –∫–ª—é—á—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–µ –≤ —á–∞—Ç –°–∞–Ω—Ç–µ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
    # –∏–Ω—Ñ–∞: Users.first_name, Users.last_name, Relations_user_group.wish

    for key in dict_sant:
        curs.execute('SELECT us.first_name, us.last_name, us.username, rel.wish FROM Users as us '
                     'LEFT JOIN Relations_user_group as rel '
                     'ON us.id = rel.user_id '
                     'WHERE user_id=:user_id AND group_id=:group_id',
                     {'user_id': key, 'group_id': group_data[0][0]})
        info = curs.fetchall()
        santa_id = dict_sant[key]
        print(f'–¥–ª—è —Å–∞–Ω—Ç—ã: id={santa_id} --- –∏–≥—Ä–æ–∫: {info}')
        print(f'santa_id: {santa_id}')

        # —É–∑–Ω–∞–µ–º tg_id –°–∞–Ω—Ç—ã –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –∫–ª—é—á–∞
        curs.execute('SELECT tg_id FROM Users WHERE id=:id', {'id': santa_id})
        santa_tg_id = curs.fetchall()
        print(f'santa_tg_id: {santa_tg_id[0][0]}')

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ None –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –¥–ª—è –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—ã
        player_name = ''
        player_wish = ''

        if info[0][0] == None:
            player_name = info[0][1]
        elif info[0][1] == None:
            player_name = info[0][0]
        else:
            player_name = f'{info[0][0]} {info[0][1]}'

        if info[0][3] != None:
            player_wish = info[0][3]
        else:
            player_wish = '–Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ'

        # –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —é–∑–µ—Ä–∞ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞—Ç—å
        print(f'santa_tg_id: {santa_tg_id[0][0]}')
        try:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –°–∞–Ω—Ç–µ!
            bot.send_message(santa_tg_id[0][0], text=f'‚òÉÔ∏è‚ùÑÔ∏è‚òÉÔ∏è‚ùÑÔ∏è‚òÉÔ∏è‚ùÑÔ∏è‚òÉÔ∏è‚ùÑÔ∏è‚òÉÔ∏è‚ùÑÔ∏èÔ∏è‚òÉÔ∏èÔ∏è\n\n'
                                                     f'–ü—Ä–∏–≤–µ—Ç! –í–æ—Ç –∏ —Ä–æ–∑—ã–≥—Ä—ã—à –≤ –≥—Ä—É–ø–øe ¬´{group_data[0][2]}¬ª! üéâ\n'
                                                     f'–¢—ã –±—É–¥–µ—à—å –¢–∞–π–Ω—ã–º –°–∞–Ω—Ç–æ–π –¥–ª—è —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ –∏–º–µ–Ω–∏ '
                                                     f'{player_name}! \n'
                                                     f'–ï–≥–æ –Ω–∏–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ: @{info[0][2]}.\n'
                                                     f'–ï–≥–æ –ø–æ—Å–ª–∞–Ω–∏–µ –¥–ª—è —Ç–µ–±—è: {player_wish} üéÅ\n\n'
                                                     f'–¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏—Å–ª—É—à–∞—Ç—å—Å—è –∫ –ø–æ–∂–µ–ª–∞–Ω–∏—é, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å.\n\n'
                                                     f'–°—á–∞—Å—Ç–ª–∏–≤–æ–≥–æ –ù–æ–≤–æ–≥–æ –ì–æ–¥–∞ –∏ –¥–æ –Ω–æ–≤—ã—Ö –≤—Å—Ç—Ä–µ—á!\n\n'
                                                     f'üéÑüéÑüéÑüéÑüéÑüéÑüéÑüéÑüéÑüéÑüéÑ')
        except telebot.apihelper.ApiException:
            print('–≤–µ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π......')

            # —É–∑–Ω–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ü—Ä–æ–ø–∞–≤—à–µ–≥–æ –¢–∞–π–Ω–æ–≥–æ –°–∞–Ω—Ç—ã –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –µ–≥–æ tg_id
            curs.execute('SELECT first_name, last_name, username FROM Users WHERE tg_id=:tg_id',
                         {'tg_id': santa_tg_id[0][0]})
            missing_santa = curs.fetchall()
            print(f'missing_santa: {missing_santa}')

            if missing_santa[0][0] == None:
                missing_santa_name = missing_santa[0][1]
            elif missing_santa[0][1] == None:
                missing_santa_name = missing_santa[0][0]
            else:
                missing_santa_name = f'{missing_santa[0][0]} {missing_santa[0][1]}'

            # —É–∑–Ω–∞–µ–º tg_id –≤–µ–¥—É—â–µ–≥–æ –ø–æ –µ–≥–æ –±–¥_id
            print(f'leader_tg_id: {group_data[0][0]}')
            curs.execute('SELECT tg_id FROM Users WHERE id=:id', {'id': group_data[0][1]})
            leader_tg_id = curs.fetchall()

            print(f'missing_santa: {missing_santa}')
            print(f'leader_tg_id: {leader_tg_id}')

            pl_wish = ''

            if player_wish == '':
                pl_wish = '–Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ'
            else:
                pl_wish = player_wish

            bot.send_message(leader_tg_id[0][0], text=f'üî¥ –ë–µ–¥—Å—Ç–≤–∏–µ: –ø—Ä–æ–ø–∞–≤—à–∏–π –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞! üî¥ \n\n'
                                                   f'–ò–≥—Ä–æ–∫ {missing_santa_name} - @{missing_santa[0][2]} '
                                                   f'–Ω–µ –ø–æ–ª—É—á–∏–ª –ø–æ—Å–ªa–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ {player_name} - @{info[0][2]} '
                                                   f'c –ø–æ–∂–µ–ª–∞–Ω–∏–µ–º ¬´{pl_wish}¬ª ü•∫ \n\n'
                                                   f'–°–æ–æ–±—â–∏ —É—Å—Ç–Ω–æ –∏ –ø—Ä–æ—Å–ª–µ–¥–∏, —á—Ç–æ–±—ã {player_name} –∏ –ø–æ–¥–∞—Ä–æ–∫ –≤—Å—Ç—Ä–µ—Ç–∏–ª–∏—Å—å!')

        # –º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–æ–∑—ã–≥—Ä—ã—à–∞ raffle –Ω–∞ 1 !
        curs.execute('UPDATE Groups SET raffle=:raffle WHERE id=:id',
                     {'raffle': 1, 'id': group_data[0][0]})

    conn.commit()
    conn.close()


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π

# —Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ —Ä—É—á–Ω–æ–º –≤–≤–æ–¥–µ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã
@bot.message_handler(content_types=['text'])
def santa_text(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ —Ç–µ–∫—Å—Ç. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['sticker'])
def santa_sticker(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –º–µ–Ω—è —Å—Ç–∏–∫–µ—Ä–∏—Ç. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['photo'])
def santa_photo(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ —Ñ–æ—Ç–æ. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['document'])
def santa_document(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –º–µ–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ç. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['voice'])
def santa_voice(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –≥–æ–≤–æ—Ä–∏—Ç —Å–æ –º–Ω–æ–π. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['audio'])
def santa_audio(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ –∞—É–¥–∏–æ. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['video', 'video_note'])
def santa_video(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ –≤–∏–¥–µ–æ. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['location'])
def santa_location(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ –ª–æ–∫–∞—Ü–∏—é. –û–∫.')
    logmess(message)

@bot.message_handler(content_types=['contact'])
def santa_contact(message):
    bot.send_message(message.chat.id, text='–ß–µ–ª–æ–≤–µ–∫ –æ—Ç–ø—Ä–∞–≤–∏–ª –º–Ω–µ –∫–æ–Ω—Ç–∞–∫—Ç. –û–∫.')
    logmess(message)


# # –±–æ—Ç –¥—Ä–∞–∑–Ω–∏—Ç—Å—è
# @bot.message_handler(func=lambda message: True)
# def echo_all(message):
#     # bot.reply_to(message, message.text)  # –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
#     bot.send_message(message.chat.id, message.text)  # –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# # –±–æ—Ç —Ä—É–≥–∞–µ—Ç—Å—è
# @bot.message_handler(func=lambda message: True)
# def any_message(message):
#     bot.reply_to(message, "–°–∞–º {!s}".format(message.text))
#
# # –±–æ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–≤–æ–µ —Ä—É–≥–∞—Ç–µ–ª—å—Å—Ç–≤–æ –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
# @bot.edited_message_handler(func=lambda message: True)
# def edit_message(message):
#     bot.edit_message_text(chat_id=message.chat.id,
#                           text= "–°–∞–º {!s}".format(message.text),
#                           message_id=message.message_id + 1)


def logmess(message):
    print(f'\nmessage: {message}') # –º–æ–∂–Ω–æ —É–±—Ä–∞—Ç—å —ç—Ç–æ—Ç –≤—ã–≤–æ–¥
    print('\n***')
    print(datetime.now())
    print(f'{message.chat.first_name} {message.chat.last_name} '
          f'({message.chat.username} id={message.chat.id}) –ø–∏—à–µ—Ç:\n{message.text}\n')

def logcall(call):
    print(f'\ncall: {call}')


print('—Ç–æ—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç...')
if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0, timeout=20) # –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è —Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –≤—ã–∫–ª—é—á–∞–ª—Å—è –±–µ–∑ —Å–æ–æ–±—â–µ–Ω–∏–π

print('—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω...')